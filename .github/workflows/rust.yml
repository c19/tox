name: Rust

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust:
          - stable
          - 1.56.1
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Build docs
      run: cargo doc
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{ matrix.rust }}
        path: |
          target/debug/examples/tox_proxy_server
          target/debug/examples/tox_proxy_client
        retention-days: 1

  release:
    name: "Dev Release"
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
    - name: Display fetched artifacts
      run: ls -R
    - name: Emit a Github Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          macos-latest-1.56.1/tox_proxy_server
          macos-latest-1.56.1/tox_proxy_client
          macos-latest-stable/tox_proxy_server
          macos-latest-stable/tox_proxy_client
          ubuntu-latest-1.56.1/tox_proxy_server
          ubuntu-latest-1.56.1/tox_proxy_client
          ubuntu-latest-stable/tox_proxy_server
          ubuntu-latest-stable/tox_proxy_client

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.18.5'
          args: '-o Lcov -- --test-threads 1'
      - name: Run Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./lcov.info
